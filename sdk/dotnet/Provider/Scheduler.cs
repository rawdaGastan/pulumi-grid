// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Grid.Provider
{
    [GridResourceType("grid:provider:Scheduler")]
    public partial class Scheduler : global::Pulumi.CustomResource
    {
        [Output("certification_type")]
        public Output<string?> Certification_type { get; private set; } = null!;

        [Output("city")]
        public Output<string?> City { get; private set; } = null!;

        [Output("country")]
        public Output<string?> Country { get; private set; } = null!;

        [Output("dedicated")]
        public Output<bool?> Dedicated { get; private set; } = null!;

        [Output("domain")]
        public Output<bool?> Domain { get; private set; } = null!;

        [Output("farm_ids")]
        public Output<ImmutableArray<int>> Farm_ids { get; private set; } = null!;

        [Output("farm_name")]
        public Output<string?> Farm_name { get; private set; } = null!;

        [Output("free_ips")]
        public Output<int?> Free_ips { get; private set; } = null!;

        [Output("gpu_available")]
        public Output<bool?> Gpu_available { get; private set; } = null!;

        [Output("gpu_device_id")]
        public Output<string?> Gpu_device_id { get; private set; } = null!;

        [Output("gpu_device_name")]
        public Output<string?> Gpu_device_name { get; private set; } = null!;

        [Output("gpu_vendor_id")]
        public Output<string?> Gpu_vendor_id { get; private set; } = null!;

        [Output("gpu_vendor_name")]
        public Output<string?> Gpu_vendor_name { get; private set; } = null!;

        [Output("has_gpu")]
        public Output<bool?> Has_gpu { get; private set; } = null!;

        [Output("hru")]
        public Output<int?> Hru { get; private set; } = null!;

        [Output("ipv4")]
        public Output<bool?> Ipv4 { get; private set; } = null!;

        [Output("ipv6")]
        public Output<bool?> Ipv6 { get; private set; } = null!;

        [Output("mru")]
        public Output<int?> Mru { get; private set; } = null!;

        [Output("node_id")]
        public Output<int?> Node_id { get; private set; } = null!;

        [Output("nodes")]
        public Output<ImmutableArray<int>> Nodes { get; private set; } = null!;

        [Output("rentable")]
        public Output<bool?> Rentable { get; private set; } = null!;

        [Output("rented")]
        public Output<bool?> Rented { get; private set; } = null!;

        [Output("sru")]
        public Output<int?> Sru { get; private set; } = null!;

        [Output("twin_id")]
        public Output<int?> Twin_id { get; private set; } = null!;


        /// <summary>
        /// Create a Scheduler resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Scheduler(string name, SchedulerArgs? args = null, CustomResourceOptions? options = null)
            : base("grid:provider:Scheduler", name, args ?? new SchedulerArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Scheduler(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("grid:provider:Scheduler", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Scheduler resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Scheduler Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Scheduler(name, id, options);
        }
    }

    public sealed class SchedulerArgs : global::Pulumi.ResourceArgs
    {
        [Input("certification_type")]
        public Input<string>? Certification_type { get; set; }

        [Input("city")]
        public Input<string>? City { get; set; }

        [Input("country")]
        public Input<string>? Country { get; set; }

        [Input("dedicated")]
        public Input<bool>? Dedicated { get; set; }

        [Input("domain")]
        public Input<bool>? Domain { get; set; }

        [Input("farm_ids")]
        private InputList<int>? _farm_ids;
        public InputList<int> Farm_ids
        {
            get => _farm_ids ?? (_farm_ids = new InputList<int>());
            set => _farm_ids = value;
        }

        [Input("farm_name")]
        public Input<string>? Farm_name { get; set; }

        [Input("free_ips")]
        public Input<int>? Free_ips { get; set; }

        [Input("gpu_available")]
        public Input<bool>? Gpu_available { get; set; }

        [Input("gpu_device_id")]
        public Input<string>? Gpu_device_id { get; set; }

        [Input("gpu_device_name")]
        public Input<string>? Gpu_device_name { get; set; }

        [Input("gpu_vendor_id")]
        public Input<string>? Gpu_vendor_id { get; set; }

        [Input("gpu_vendor_name")]
        public Input<string>? Gpu_vendor_name { get; set; }

        [Input("has_gpu")]
        public Input<bool>? Has_gpu { get; set; }

        [Input("hru")]
        public Input<int>? Hru { get; set; }

        [Input("ipv4")]
        public Input<bool>? Ipv4 { get; set; }

        [Input("ipv6")]
        public Input<bool>? Ipv6 { get; set; }

        [Input("mru")]
        public Input<int>? Mru { get; set; }

        [Input("node_id")]
        public Input<int>? Node_id { get; set; }

        [Input("rentable")]
        public Input<bool>? Rentable { get; set; }

        [Input("rented")]
        public Input<bool>? Rented { get; set; }

        [Input("sru")]
        public Input<int>? Sru { get; set; }

        [Input("twin_id")]
        public Input<int>? Twin_id { get; set; }

        public SchedulerArgs()
        {
        }
        public static new SchedulerArgs Empty => new SchedulerArgs();
    }
}
