// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Grid.Provider
{
    [GridResourceType("grid:provider:Network")]
    public partial class Network : global::Pulumi.CustomResource
    {
        [Output("access_wg_config")]
        public Output<string> Access_wg_config { get; private set; } = null!;

        [Output("add_wg_access")]
        public Output<bool?> Add_wg_access { get; private set; } = null!;

        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        [Output("external_ip")]
        public Output<string> External_ip { get; private set; } = null!;

        [Output("external_sk")]
        public Output<string> External_sk { get; private set; } = null!;

        [Output("ip_range")]
        public Output<string> Ip_range { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("node_deployment_id")]
        public Output<ImmutableDictionary<string, int>> Node_deployment_id { get; private set; } = null!;

        [Output("nodes")]
        public Output<ImmutableArray<object>> Nodes { get; private set; } = null!;

        [Output("nodes_ip_range")]
        public Output<ImmutableDictionary<string, string>> Nodes_ip_range { get; private set; } = null!;

        [Output("public_node_id")]
        public Output<int> Public_node_id { get; private set; } = null!;

        [Output("solution_type")]
        public Output<string?> Solution_type { get; private set; } = null!;


        /// <summary>
        /// Create a Network resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Network(string name, NetworkArgs args, CustomResourceOptions? options = null)
            : base("grid:provider:Network", name, args ?? new NetworkArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Network(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("grid:provider:Network", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Network resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Network Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Network(name, id, options);
        }
    }

    public sealed class NetworkArgs : global::Pulumi.ResourceArgs
    {
        [Input("add_wg_access")]
        public Input<bool>? Add_wg_access { get; set; }

        [Input("description", required: true)]
        public Input<string> Description { get; set; } = null!;

        [Input("ip_range", required: true)]
        public Input<string> Ip_range { get; set; } = null!;

        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("nodes", required: true)]
        private InputList<object>? _nodes;
        public InputList<object> Nodes
        {
            get => _nodes ?? (_nodes = new InputList<object>());
            set => _nodes = value;
        }

        [Input("solution_type")]
        public Input<string>? Solution_type { get; set; }

        public NetworkArgs()
        {
        }
        public static new NetworkArgs Empty => new NetworkArgs();
    }
}
