// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Grid.Provider
{
    [GridResourceType("grid:provider:Kubernetes")]
    public partial class Kubernetes : global::Pulumi.CustomResource
    {
        [Output("master")]
        public Output<Outputs.K8sNodeInput> Master { get; private set; } = null!;

        [Output("master_computed")]
        public Output<Outputs.K8sNodeComputed> Master_computed { get; private set; } = null!;

        [Output("network_name")]
        public Output<string> Network_name { get; private set; } = null!;

        [Output("node_deployment_id")]
        public Output<ImmutableDictionary<string, int>> Node_deployment_id { get; private set; } = null!;

        [Output("nodes_ip_range")]
        public Output<ImmutableDictionary<string, string>> Nodes_ip_range { get; private set; } = null!;

        [Output("solution_type")]
        public Output<string?> Solution_type { get; private set; } = null!;

        [Output("ssh_key")]
        public Output<string?> Ssh_key { get; private set; } = null!;

        [Output("token")]
        public Output<string> Token { get; private set; } = null!;

        [Output("workers")]
        public Output<ImmutableArray<Outputs.K8sNodeInput>> Workers { get; private set; } = null!;

        [Output("workers_computed")]
        public Output<ImmutableDictionary<string, Outputs.K8sNodeComputed>> Workers_computed { get; private set; } = null!;


        /// <summary>
        /// Create a Kubernetes resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Kubernetes(string name, KubernetesArgs args, CustomResourceOptions? options = null)
            : base("grid:provider:Kubernetes", name, args ?? new KubernetesArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Kubernetes(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("grid:provider:Kubernetes", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Kubernetes resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Kubernetes Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Kubernetes(name, id, options);
        }
    }

    public sealed class KubernetesArgs : global::Pulumi.ResourceArgs
    {
        [Input("master", required: true)]
        public Input<Inputs.K8sNodeInputArgs> Master { get; set; } = null!;

        [Input("network_name", required: true)]
        public Input<string> Network_name { get; set; } = null!;

        [Input("solution_type")]
        public Input<string>? Solution_type { get; set; }

        [Input("ssh_key")]
        public Input<string>? Ssh_key { get; set; }

        [Input("token", required: true)]
        public Input<string> Token { get; set; } = null!;

        [Input("workers", required: true)]
        private InputList<Inputs.K8sNodeInputArgs>? _workers;
        public InputList<Inputs.K8sNodeInputArgs> Workers
        {
            get => _workers ?? (_workers = new InputList<Inputs.K8sNodeInputArgs>());
            set => _workers = value;
        }

        public KubernetesArgs()
        {
        }
        public static new KubernetesArgs Empty => new KubernetesArgs();
    }
}
