// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Threefold.Provider
{
    [ThreefoldResourceType("threefold:provider:Deployment")]
    public partial class Deployment : global::Pulumi.CustomResource
    {
        [Output("contract_id")]
        public Output<int> Contract_id { get; private set; } = null!;

        [Output("disks")]
        public Output<ImmutableArray<Outputs.Disk>> Disks { get; private set; } = null!;

        [Output("ip_range")]
        public Output<string> Ip_range { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("network_name")]
        public Output<string?> Network_name { get; private set; } = null!;

        [Output("node_deployment_id")]
        public Output<ImmutableDictionary<string, int>> Node_deployment_id { get; private set; } = null!;

        [Output("node_id")]
        public Output<object> Node_id { get; private set; } = null!;

        [Output("qsfs")]
        public Output<ImmutableArray<Outputs.QSFSInput>> Qsfs { get; private set; } = null!;

        [Output("qsfs_computed")]
        public Output<ImmutableArray<Outputs.QSFSComputed>> Qsfs_computed { get; private set; } = null!;

        [Output("solution_provider")]
        public Output<int?> Solution_provider { get; private set; } = null!;

        [Output("solution_type")]
        public Output<string?> Solution_type { get; private set; } = null!;

        [Output("vms")]
        public Output<ImmutableArray<Outputs.VMInput>> Vms { get; private set; } = null!;

        [Output("vms_computed")]
        public Output<ImmutableArray<Outputs.VMComputed>> Vms_computed { get; private set; } = null!;

        [Output("zdbs")]
        public Output<ImmutableArray<Outputs.ZDBInput>> Zdbs { get; private set; } = null!;

        [Output("zdbs_computed")]
        public Output<ImmutableArray<Outputs.ZDBComputed>> Zdbs_computed { get; private set; } = null!;


        /// <summary>
        /// Create a Deployment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Deployment(string name, DeploymentArgs args, CustomResourceOptions? options = null)
            : base("threefold:provider:Deployment", name, args ?? new DeploymentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Deployment(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("threefold:provider:Deployment", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Deployment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Deployment Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Deployment(name, id, options);
        }
    }

    public sealed class DeploymentArgs : global::Pulumi.ResourceArgs
    {
        [Input("disks")]
        private InputList<Inputs.DiskArgs>? _disks;
        public InputList<Inputs.DiskArgs> Disks
        {
            get => _disks ?? (_disks = new InputList<Inputs.DiskArgs>());
            set => _disks = value;
        }

        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("network_name")]
        public Input<string>? Network_name { get; set; }

        [Input("node_id", required: true)]
        public Input<object> Node_id { get; set; } = null!;

        [Input("qsfs")]
        private InputList<Inputs.QSFSInputArgs>? _qsfs;
        public InputList<Inputs.QSFSInputArgs> Qsfs
        {
            get => _qsfs ?? (_qsfs = new InputList<Inputs.QSFSInputArgs>());
            set => _qsfs = value;
        }

        [Input("solution_provider")]
        public Input<int>? Solution_provider { get; set; }

        [Input("solution_type")]
        public Input<string>? Solution_type { get; set; }

        [Input("vms")]
        private InputList<Inputs.VMInputArgs>? _vms;
        public InputList<Inputs.VMInputArgs> Vms
        {
            get => _vms ?? (_vms = new InputList<Inputs.VMInputArgs>());
            set => _vms = value;
        }

        [Input("zdbs")]
        private InputList<Inputs.ZDBInputArgs>? _zdbs;
        public InputList<Inputs.ZDBInputArgs> Zdbs
        {
            get => _zdbs ?? (_zdbs = new InputList<Inputs.ZDBInputArgs>());
            set => _zdbs = value;
        }

        public DeploymentArgs()
        {
        }
        public static new DeploymentArgs Empty => new DeploymentArgs();
    }
}
